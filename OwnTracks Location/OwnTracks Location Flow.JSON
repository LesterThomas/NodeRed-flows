[{"id":"54651cc0.ab9ae4","type":"websocket-listener","path":"/ws/location","wholemsg":"false"},{"id":"ee021ac9.11fde8","type":"owntracks","name":"Location","broker":"localhost","port":1883,"clientid":"","topic":"owntracks/lester/lestersandroid","x":138,"y":127.09091186523438,"z":"9105d780.6efa28","wires":[["e53c208c.1ac3e","eee057f0.111fa8","e1de8180.1e218","29cb9010.d6347"]]},{"id":"eee057f0.111fa8","type":"debug","name":"","active":true,"console":false,"complete":false,"x":366.9090881347656,"y":188,"z":"9105d780.6efa28","wires":[]},{"id":"e53c208c.1ac3e","type":"function","name":"store location as global","func":"\nvar location;\n//console.log(msg.payload.latitude);\nlocation=\"[{\\\"lat\\\":\"+msg.payload.latitude+\", \\\"lng\\\":\"+msg.payload.longitude+\"}]\";\ncontext.global.location = location;\n\n\n//return {lat:msg.payload.latitude,lng:msg.payload.longitude};\n//var newMsg = { payload: msg.payload.length };\n//var msg = {type:\"Fiat\", model:500, color:\"white\"};\n\nreturn msg;\n","outputs":1,"x":437.9085693359375,"y":134,"z":"9105d780.6efa28","wires":[["bc80c83b.437f38"]]},{"id":"bc80c83b.437f38","type":"debug","name":"","active":true,"console":false,"complete":false,"x":643.9090576171875,"y":134,"z":"9105d780.6efa28","wires":[]},{"id":"e1de8180.1e218","type":"template","name":"","template":"Lester is at lesterthomas.ddns.net:1880/api/map","x":384.4272766113281,"y":259.4319763183594,"z":"9105d780.6efa28","wires":[["7a230b72.85dcf4"]]},{"id":"7a230b72.85dcf4","type":"twitter out","twitter":"","name":"Tweet location","x":581.42724609375,"y":258.4319763183594,"z":"9105d780.6efa28","wires":[]},{"id":"29cb9010.d6347","type":"function","name":"","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\nvar now = Date();\nvar message = \"\";\ndata = msg.payload;\n\nif ( (data._type == \"location\") && (data.event != undefined ) ) {\n\t\n\t\tif ( data.event == \"enter\" ) {\t\t\t\n\t\t\tmessage = \"Entering Location: \";\n\t\t} else { \n\t\t\tmessage = \"Leaving Location: \";\n\t\t}\n\t\t\n\t\tif ( data.desc != undefined ) {\n\t\t\t// Shared waypoint, comes with a description:\n\t\t\t\tmessage += data.desc;\n \t\t} else {\n \t\t\t// No description is set, non shared \"private\" waypoint\n \t\t\t\tmessage += data.lat + \",\" + data.lon;\n \t\t}\n }\n\nmsg.payload = message;\n//console.log(msg.payload);\n\nreturn msg;","outputs":1,"x":389.4272766113281,"y":331.2127990722656,"z":"9105d780.6efa28","wires":[["25ab1bdb.da54e4"]]},{"id":"25ab1bdb.da54e4","type":"debug","name":"","active":true,"console":false,"complete":false,"x":558.4273071289062,"y":327.4320068359375,"z":"9105d780.6efa28","wires":[]},{"id":"be72ee17.418d1","type":"websocket out","name":"","server":"54651cc0.ab9ae4","x":600.9090881347656,"y":560.9090728759766,"z":"9105d780.6efa28","wires":[]},{"id":"d1b2a725.2e4d58","type":"debug","name":"","active":false,"console":false,"complete":false,"x":592.4273071289062,"y":608.4319763183594,"z":"9105d780.6efa28","wires":[]},{"id":"78be47b.f8741b8","type":"function","name":"","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n\nmsg.payload = context.global.location;\nreturn msg;","outputs":1,"x":390.9090881347656,"y":557.9090576171875,"z":"9105d780.6efa28","wires":[["be72ee17.418d1","d1b2a725.2e4d58"]]},{"id":"a32344bc.5cdcb8","type":"websocket in","name":"","server":"54651cc0.ab9ae4","x":166.90908813476562,"y":558.9090576171875,"z":"9105d780.6efa28","wires":[["78be47b.f8741b8"]]},{"id":"875d71ff.78a29","type":"http in","name":"","url":"/map","method":"get","x":158.90911865234375,"y":495.9090576171875,"z":"9105d780.6efa28","wires":[["42b9585d.bd46a8"]]},{"id":"42b9585d.bd46a8","type":"template","name":"","template":"<!DOCTYPE html>\n<html>\n<head>\n  <title>Owntracks & Node-Red Live Map</title>\n  <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\"></script>\n  <script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=true\"></script>\n  <script type=\"text/javascript\" src=\"http://yourjavascript.com/4594301102/gmaps.js\"></script>\n \n  <style type=\"text/css\" media=\"screen\">\n    #map {\n      position:absolute;\n      top: 0; bottom: 0; left: 0; right: 0;\n    }\n  </style>\n</head>\n<body>\n \n  <div id=\"map\"></div>\n  <script type=\"text/javascript\">\n  var socketaddy = \"ws://lesterthomas.ddns.net:1880/api/ws/location\";\n    var map;\n    var sock;\n    $(document).ready(function(){\n      \n      map = new GMaps({\n        div: '#map',\n        lat: -12.043333,\n        lng: -77.028333\n      });\n      \n      \n      sock = new WebSocket(socketaddy);\n      sock.onopen = function(){ console.log(\"Connected websocket\");\n\t      console.log(\"Sending ping..\");\n\t      sock.send(\"Ping!\");\n\t      console.log(\"Ping sent..\");\n      };\n      sock.onerror = function(){ console.log(\"Websocket error\"); };\n      sock.onmessage = function(evt){\n        var latlng = JSON.parse(evt.data);\n        var array = $.map(latlng, function(el) {\n  \t\t\treturn [[el.lat, el.lng]];\n\t\t\t});\n        \n        map.removeMarkers();\n        map.removePolylines();\n       \tconsole.log(\"Got marker at \" + latlng[0].lat + \", \" + latlng[0].lng, latlng);\n        map.setZoom(17);\n       \tmap.setCenter(latlng[0].lat, latlng[0].lng);\n        map.addMarkers(latlng);\n      \tmap.drawPolyline({\n\t\t  path: array,\n\t\t  strokeColor: '#131540',\n\t\t  strokeOpacity: 0.6,\n\t\t  strokeWeight: 6\n\t\t});\n      }\n    });\n  </script>\n</body>\n</html>","x":384.90911865234375,"y":484.90906524658203,"z":"9105d780.6efa28","wires":[["bcd7ce73.43283"]]},{"id":"bcd7ce73.43283","type":"http response","name":"","x":569.9091186523438,"y":485.9090576171875,"z":"9105d780.6efa28","wires":[]},{"id":"116bf135.ee940f","type":"comment","name":"Receive location from OwnTracks app running on Android","info":"The App sends a message to the MQTT server running on the Raspberry Pi.","x":291,"y":60,"z":"9105d780.6efa28","wires":[]},{"id":"7348201c.8cb7e","type":"comment","name":"Web page that uses WebSockets to retrieve the latest location","info":"","x":323,"y":422,"z":"9105d780.6efa28","wires":[]}]